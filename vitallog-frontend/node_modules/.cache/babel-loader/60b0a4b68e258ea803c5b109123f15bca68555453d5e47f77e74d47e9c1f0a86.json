{"ast":null,"code":"\n\n// import React, { useEffect, useState } from \"react\";\n// import api from \"../api/axios\";\n\n// function Dashboard() {\n//   const [readings, setReadings] = useState([]);\n//   const [metricType, setMetricType] = useState(\"weight\");\n//   const [value, setValue] = useState(\"\");\n//   const [unit, setUnit] = useState(\"\");\n//   const [date, setDate] = useState(\"\");\n\n//   const token = localStorage.getItem(\"access\");\n\n//   const fetchReadings = async () => {\n//     try {\n//       const res = await api.get(\"/api/readings/\", {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       // Sort by date descending (optional, if backend doesn't already)\n//       const sorted = res.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n//       setReadings(sorted);\n//     } catch (err) {\n//       console.error(\"Error fetching readings:\", err.response?.data || err.message);\n//       alert(\"Error fetching data\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchReadings();\n//   }, []);\n\n//   const handleAdd = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const payload = { metric_type: metricType, value, unit, date };\n//       await api.post(\"/api/readings/\", payload, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       fetchReadings();\n//       setValue(\"\");\n//       setUnit(\"\");\n//       setDate(\"\");\n//     } catch (err) {\n//       console.error(\"Error adding reading:\", err.response?.data || err.message);\n//       alert(\"Error adding reading. Check console for details.\");\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"access\");\n//     localStorage.removeItem(\"refresh\");\n//     window.location.href = \"/login\"; // redirect to login\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 p-6\">\n//       <div className=\"max-w-3xl mx-auto bg-white rounded-xl shadow-md p-6\">\n//         <div className=\"flex justify-between items-center mb-6\">\n//           <h2 className=\"text-2xl font-bold text-gray-800\">My Health Readings</h2>\n//           <button\n//             onClick={handleLogout}\n//             className=\"text-sm text-white bg-red-500 hover:bg-red-600 px-4 py-2 rounded\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n\n//         <form onSubmit={handleAdd} className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//           <select\n//             value={metricType}\n//             onChange={(e) => setMetricType(e.target.value)}\n//             className=\"border rounded px-3 py-2\"\n//           >\n//             <option value=\"weight\">Weight</option>\n//             <option value=\"blood_pressure\">Blood Pressure</option>\n//             <option value=\"blood_sugar\">Blood Sugar</option>\n//           </select>\n\n//           <input\n//             type=\"number\"\n//             placeholder=\"Value\"\n//             value={value}\n//             onChange={(e) => setValue(e.target.value)}\n//             required\n//             className=\"border rounded px-3 py-2\"\n//           />\n//           <input\n//             placeholder=\"Unit\"\n//             value={unit}\n//             onChange={(e) => setUnit(e.target.value)}\n//             required\n//             className=\"border rounded px-3 py-2\"\n//           />\n//           <input\n//             type=\"date\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//             className=\"border rounded px-3 py-2\"\n//           />\n//           <div className=\"md:col-span-4\">\n//             <button\n//               type=\"submit\"\n//               className=\"w-full bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n//             >\n//               Add Reading\n//             </button>\n//           </div>\n//         </form>\n\n//         <h3 className=\"text-xl font-semibold mb-4\">Logged Metrics:</h3>\n\n//         {readings.length === 0 ? (\n//           <p className=\"text-gray-600\">No readings yet. Add one above!</p>\n//         ) : (\n//           <ul className=\"space-y-3\">\n//             {readings.map((r) => (\n//               <li\n//                 key={r.id}\n//                 className=\"bg-gray-50 p-4 rounded border border-gray-200 shadow-sm\"\n//               >\n//                 <div className=\"text-sm text-gray-500\">{new Date(r.date).toLocaleDateString()}</div>\n//                 <div className=\"text-lg font-medium text-gray-800 capitalize\">\n//                   {r.metric_type.replace(\"_\", \" \")}: {r.value} {r.unit}\n//                 </div>\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["/Users/druvath09/venvs/vitallog-frontend/src/components/Dashboard.js"],"sourcesContent":["\n\n\n// import React, { useEffect, useState } from \"react\";\n// import api from \"../api/axios\";\n\n// function Dashboard() {\n//   const [readings, setReadings] = useState([]);\n//   const [metricType, setMetricType] = useState(\"weight\");\n//   const [value, setValue] = useState(\"\");\n//   const [unit, setUnit] = useState(\"\");\n//   const [date, setDate] = useState(\"\");\n\n//   const token = localStorage.getItem(\"access\");\n\n//   const fetchReadings = async () => {\n//     try {\n//       const res = await api.get(\"/api/readings/\", {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       // Sort by date descending (optional, if backend doesn't already)\n//       const sorted = res.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n//       setReadings(sorted);\n//     } catch (err) {\n//       console.error(\"Error fetching readings:\", err.response?.data || err.message);\n//       alert(\"Error fetching data\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchReadings();\n//   }, []);\n\n//   const handleAdd = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const payload = { metric_type: metricType, value, unit, date };\n//       await api.post(\"/api/readings/\", payload, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       fetchReadings();\n//       setValue(\"\");\n//       setUnit(\"\");\n//       setDate(\"\");\n//     } catch (err) {\n//       console.error(\"Error adding reading:\", err.response?.data || err.message);\n//       alert(\"Error adding reading. Check console for details.\");\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"access\");\n//     localStorage.removeItem(\"refresh\");\n//     window.location.href = \"/login\"; // redirect to login\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 p-6\">\n//       <div className=\"max-w-3xl mx-auto bg-white rounded-xl shadow-md p-6\">\n//         <div className=\"flex justify-between items-center mb-6\">\n//           <h2 className=\"text-2xl font-bold text-gray-800\">My Health Readings</h2>\n//           <button\n//             onClick={handleLogout}\n//             className=\"text-sm text-white bg-red-500 hover:bg-red-600 px-4 py-2 rounded\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n\n//         <form onSubmit={handleAdd} className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//           <select\n//             value={metricType}\n//             onChange={(e) => setMetricType(e.target.value)}\n//             className=\"border rounded px-3 py-2\"\n//           >\n//             <option value=\"weight\">Weight</option>\n//             <option value=\"blood_pressure\">Blood Pressure</option>\n//             <option value=\"blood_sugar\">Blood Sugar</option>\n//           </select>\n\n//           <input\n//             type=\"number\"\n//             placeholder=\"Value\"\n//             value={value}\n//             onChange={(e) => setValue(e.target.value)}\n//             required\n//             className=\"border rounded px-3 py-2\"\n//           />\n//           <input\n//             placeholder=\"Unit\"\n//             value={unit}\n//             onChange={(e) => setUnit(e.target.value)}\n//             required\n//             className=\"border rounded px-3 py-2\"\n//           />\n//           <input\n//             type=\"date\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//             className=\"border rounded px-3 py-2\"\n//           />\n//           <div className=\"md:col-span-4\">\n//             <button\n//               type=\"submit\"\n//               className=\"w-full bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n//             >\n//               Add Reading\n//             </button>\n//           </div>\n//         </form>\n\n//         <h3 className=\"text-xl font-semibold mb-4\">Logged Metrics:</h3>\n\n//         {readings.length === 0 ? (\n//           <p className=\"text-gray-600\">No readings yet. Add one above!</p>\n//         ) : (\n//           <ul className=\"space-y-3\">\n//             {readings.map((r) => (\n//               <li\n//                 key={r.id}\n//                 className=\"bg-gray-50 p-4 rounded border border-gray-200 shadow-sm\"\n//               >\n//                 <div className=\"text-sm text-gray-500\">{new Date(r.date).toLocaleDateString()}</div>\n//                 <div className=\"text-lg font-medium text-gray-800 capitalize\">\n//                   {r.metric_type.replace(\"_\", \" \")}: {r.value} {r.unit}\n//                 </div>\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n"],"mappings":";;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}